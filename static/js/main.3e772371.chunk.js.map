{"version":3,"sources":["components/Good/Good.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["Good","good","GoodList","goods","map","goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"mPAEaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAEIA,EAAMC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CAAMA,KAAMA,GAAWA,SCDlBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA1BR,SAA0BX,EAAOO,EAAWE,GAC1C,IAAMG,EAAa,YAAOZ,GAe1B,OAbIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKH,EACH,OAAOU,EAAME,OAASD,EAAMC,OAC9B,KAAKb,EACH,OAAOW,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXN,EACKG,EAAcM,UAGhBN,EAMcO,CACnBjB,EACAK,EACAE,GAGF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SACZ,UACA,CAAE,WAAYf,IAAcJ,IAC9BoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SACZ,aACA,CAAE,WAAYf,IAAcH,IAC9BmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SACZ,aACA,CAAE,YAA6B,IAAjBb,IAChBc,QAAS,kBAAMb,GAAiBD,IALlC,qBAUGF,GAAaE,EACZ,wBACEY,KAAK,SACLD,UAAU,4BACVG,QACE,WACEf,EAAa,IACbE,GAAgB,IANtB,mBAaA,MAKN,cAAC,EAAD,CAAUV,MAAOW,QCvGvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e772371.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Good = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n\nexport default Good;\n","import React from 'react';\nimport { Good } from '../Good/Good';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n      goods.map(good => (\n        <Good good={good} key={good} />\n      ))\n    }\n  </ul>\n);\n\nexport default GoodList;\n","import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, reverseField) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        case SORT_BY_NAME:\n          return good1.localeCompare(good2);\n        default:\n          return false;\n      }\n    });\n  }\n\n  if (reverseField) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button',\n            'is-info',\n            { 'is-light': sortField !== SORT_BY_NAME })}\n          onClick={() => setSortField(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button',\n            'is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button',\n            'is-warning',\n            { 'is-light': reverseField !== true })}\n          onClick={() => setReverseField(!reverseField)}\n        >\n          Reverse\n        </button>\n        {\n          (sortField || reverseField) ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={\n                () => {\n                  setSortField('');\n                  setReverseField(false);\n                }\n              }\n            >\n              Reset\n            </button>\n          ) : (\n            ''\n          )\n        }\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}